services:
  db-service:
    image: postgres:16-alpine
    
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - "${DB_PORT}:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5



  rabbitmq-service:
    image: rabbitmq:4-management-alpine
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD}
    ports:
      - "${RABBITMQ_PORT}:5672"
      - "15672:15672"
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq

  consumer-service:
    build: .
    command: ["./consumer"]
    env_file:
      - .env
    depends_on:
      db-service:
        condition: service_healthy
      rabbitmq-service:
        condition: service_healthy

  api-service:
    build: .
    command: ["./api"]
    # ports:
    #   - "${API_PORT}:${API_PORT}"
    env_file:
      - .env
    depends_on:
      db-service:
        condition: service_healthy
      rabbitmq-service:
        condition: service_healthy

  gateway-service:
    image: nginx:latest
    ports:
      - "8080:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - api-service



volumes:
  db_data:
  rabbitmq_data: